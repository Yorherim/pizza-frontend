import React, { useEffect } from 'react';
import clsx from 'clsx';
import axios from 'axios';
import { useSelector, useDispatch } from 'react-redux';

import styles from './Home.module.scss';

import { Categories, Pizza, Sort, PizzaSkeleton, Pagination } from '../../components';
import { RootState } from '../../store/store';
import { setPizzas, changeLoading } from '../../store/slices/pizza/pizza';
import { changePagesCount } from '../../store/slices/filter-pizza/filter-pizza';
import { PizzaType } from '../../store/slices/pizza/types';

export const HomePage: React.FC = () => {
	const { pizzas, loading } = useSelector((state: RootState) => state.pizza);
	const { activeCategoryId, sortBy, currentPageIndex, search } = useSelector(
		(state: RootState) => state.filterPizza,
	);

	const dispatch = useDispatch();

	useEffect(() => {
		dispatch(changeLoading(true));

		// –º–µ–Ω—è–µ–º desc –Ω–∞ asc, –µ—Å–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–¥–µ–ª–∞–Ω–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–∑-–∑–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∞–ø–∏
		// —Ç–æ –µ—Å—Ç—å –∞–ø–∏ c sortBy=title&order=desc —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–æ–±–æ—Ä–æ—Ç
		const orderParam = sortBy.sort === 'title' ? 'asc' : 'desc';
		const categoryParam = activeCategoryId !== 0 ? `category=${activeCategoryId}` : '';
		const pageParam = currentPageIndex + 1;
		const searchParam = search ? `&search=${search}` : '';

		(async () => {
			const pizzas: PizzaType[] = await (
				await axios.get(
					`${process.env.REACT_APP_API_URL}?${categoryParam}&page=${pageParam}&limit=4&sortBy=${sortBy.sort}&order=${orderParam}${searchParam}`,
				)
			).data;

			// –±—ç–∫–µ–Ω–¥ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü, –ø–æ—ç—Ç–æ–º—É –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∏–º
			const pagesCount = Math.ceil(10 / 4);

			dispatch(changePagesCount(pagesCount));
			dispatch(setPizzas(pizzas));
			dispatch(changeLoading(false));
		})();
	}, [activeCategoryId, sortBy, currentPageIndex, search]);

	const renders = {
		pizzas: !pizzas.length ? (
			<div className={styles.pizzas__zeroText}>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–∏—Ö –ø–∏—Ü—Ü –Ω–µ—Ç... üòï</div>
		) : (
			pizzas.map((pizza) => <Pizza key={pizza.id} {...pizza} />)
		),
		skeleton: [...new Array(4)].map((_, i) => <PizzaSkeleton key={i} />),
	};

	return (
		<main className={styles.body}>
			<div className="container">
				<div className={clsx(styles.sorting)}>
					<Categories />
					<Sort />
				</div>

				<div className={styles.pizzas}>
					<h2 className={styles.pizzas__title}>–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
					<div className={styles.pizzas__wrapper}>
						{!loading ? renders.pizzas : renders.skeleton}
					</div>
				</div>

				<Pagination />
			</div>
		</main>
	);
};
